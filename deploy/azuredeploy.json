{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "location for resource created."
            }
        },
        "digitalTwinsName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of the destination Digital Twins."
            }
        },
        "digitalTwinsHostName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Host name of the destination Digital Twins (without https)."
            }
        },
        "functionAppName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of the function app to be created."
            }
        },
        "useClientSecret": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Use Client secret instead of Managed Identity for ADT connection."
            }
        },
        "azureTenantId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Azure Tenant Id"
            }
        },
        "azureClientId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Azure Client Id"
            }
        },
        "azureClientSecret": {
            "type": "secureString",
            "defaultValue": "",
            "metadata": {
                "description": "Azure Client Secret"
            }
        }
    },
    "variables": {
        "storageName": "[concat('storage', parameters('functionAppName'))]"
    },
    "functions": [],
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2020-08-01-preview",
            "name": "[variables('storageName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "accessTier": "Hot"
            },
            "resources": [
                {
                    "type": "queueServices/queues",
                    "apiVersion": "2020-08-01-preview",
                    "name": "default/json-queue",
                    "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts',variables('storageName'))]"
                    ]
                },
                {
                    "type": "blobServices/containers",
                    "apiVersion": "2020-08-01-preview",
                    "name": "default/input-csv",
                    "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
                    ],
                    "properties": {
                        "defaultEncryptionScope": "$account-encryption-key",
                        "denyEncryptionScopeOverride": false,
                        "publicAccess": "None"
                    }
                },
                {
                    "type": "blobServices/containers",
                    "apiVersion": "2020-08-01-preview",
                    "name": "default/automatic-import",
                    "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
                    ],
                    "properties": {
                        "defaultEncryptionScope": "$account-encryption-key",
                        "denyEncryptionScopeOverride": false,
                        "publicAccess": "None"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-10-01",
            "name": "[parameters('functionAppName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', variables('storageName'), 'default', 'input-csv')]",
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', variables('storageName'), 'default', 'automatic-import')]",
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices/queues', variables('storageName'), 'default', 'json-queue')]"
            ],
            "kind": "functionapp",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "siteConfig": {
                    "functionAppScaleLimit": 1,
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageName'), ';AccountKey=', listKeys(variables('storageName'),'2019-06-01').keys[0].value,';EndpointSuffix=core.windows.net')]"
                        },
                        {
                            "name": "AzureWebJobsSecretStorageType",
                            "value": "Files"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageName'), ';AccountKey=', listKeys(variables('storageName'),'2019-06-01').keys[0].value,';EndpointSuffix=core.windows.net')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[concat(parameters('functionAppName'), take(uniqueString(parameters('functionAppName')), 4))]"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "node"
                        },
                        {
                            "name": "WEBSITE_NODE_DEFAULT_VERSION",
                            "value": "10.14.1"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        {
                            "name": "WATCHED_CSV_STORAGE_CONNECTION",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageName'), ';AccountKey=', listKeys(variables('storageName'),'2019-06-01').keys[0].value,';EndpointSuffix=core.windows.net')]"
                        },
                        {
                            "name": "WATCHED_CSV_STORAGE_CONTAINER",
                            "value": "automatic-import"
                        },
                        {
                            "name": "CSV_STORAGE_CONNECTION",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageName'), ';AccountKey=', listKeys(variables('storageName'),'2019-06-01').keys[0].value,';EndpointSuffix=core.windows.net')]"
                        },
                        {
                            "name": "CSV_STORAGE_CONTAINER",
                            "value": "input-csv"
                        },
                        {
                            "name": "JSON_STORAGE_CONNECTION",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageName'), ';AccountKey=', listKeys(variables('storageName'),'2019-06-01').keys[0].value,';EndpointSuffix=core.windows.net')]"
                        },
                        {
                            "name": "JSON_STORAGE_QUEUE",
                            "value": "json-queue"
                        },
                        {
                            "name": "DIGITAL_TWINS_URL",
                            "value": "[concat('https://',if(empty(parameters('digitalTwinsHostName')), reference(resourceId('Microsoft.DigitalTwins/digitalTwinsInstances',parameters('digitalTwinsName')),'2020-12-01','Full').properties.hostName, parameters('digitalTwinsHostName')))]"
                        },
                        {
                            "name": "AZURE_TENANT_ID",
                            "value": "[parameters('azureTenantId')]"
                        },
                        {
                            "name": "AZURE_CLIENT_ID",
                            "value": "[parameters('azureClientId')]"
                        },
                        {
                            "name": "AZURE_CLIENT_SECRET",
                            "value": "[parameters('azureClientSecret')]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "apiVersion": "2018-11-01",
                    "name": "web",
                    "type": "sourcecontrols",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
                    ],
                    "properties": {
                        "repoUrl": "https://github.com/Cosmo-Tech/azure-digital-twin-injector.git",
                        "branch": "main",
                        "publishRunbook": true,
                        "IsManualIntegration": true
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "condition": "[not(parameters('useClientSecret'))]",
            "apiVersion": "2018-01-01-preview",
            "name": "[guid(uniqueString(parameters('functionAppName'), 'Azure Digital Twins Data Owner', parameters('digitalTwinsName')))]",
            "scope": "[concat('Microsoft.DigitalTwins/digitalTwinsInstances/', parameters('digitalTwinsName'))]",
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'bcd981a7-7f74-457b-83e1-cceb9e632ffe')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2020-10-01', 'Full').identity.principalId]"
            }
        }
    ],
    "outputs": {}
}
